bupstash put [OPTIONS] TAGS... FILE
bupstash put [OPTIONS] TAGS... DIRS...
bupstash put -e [OPTIONS] TAGS... CMD...

`bupstash put` encrypts a file, directory, or command output and stores it
in a bupstash repository such that only the primary backup key can decrypt it.

For files, the data is saved directly, for directories, the data
is converted to a tar archive, and for commands the command is executed, and
stdout is sent to the database.

To best utilize the put caching mechanism, give each job you intend to run
repeatedly it's own send log. This can dramatically reduce the amount of 
disk reading and network usage required to make a snapshot.

Examples:
  $ export BUPSTASH_REPOSTORY=$HOME/bupstash-repo
  $ export BUPSTASH_KEY=./my-secret-bupstash.key

  # To avoid resending data needlessly during backups, create job specific send log.
  $ bupstash put --send-log /root/backup-sendlog ./to-backup

  # Specify arbitrary metadata as KEY=VALUE before.
  $ bupstash put host=$(hostname) ./file.txt

  # Use --exec to save the output of commands.
  $ bupstash put --exec name=files.tar tar -C ./files -cvf - .

  # Put from stdin (does not check error codes).
  $ echo data | bupstash put -
